LavaPack.loadBundle([[4,{"../../shared/constants/app":3981,"../../shared/constants/metametrics":3990,"../../shared/modules/browser-runtime.utils":4013,"../../shared/modules/mv3.utils":4022,"../../shared/modules/object.utils":4024,"./first-time-state":37,"./lib/createStreamSink":49,"./lib/ens-ipfs/setup":54,"./lib/get-first-preferred-lang-code":56,"./lib/getObjStructure":57,"./lib/local-store":60,"./lib/migrator":63,"./lib/network-store":64,"./lib/notification-manager":65,"./lib/setup-initial-state-hooks":84,"./lib/setupSentry":85,"./lib/util":92,"./metamask-controller":93,"./migrations":203,"./platforms/extension":204,"@metamask/controller-utils":1066,"@metamask/obs-store":1486,"@metamask/utils":1761,"debounce-stream":2627,"end-of-stream":2666,"eth-rpc-errors":2722,events:2819,"extension-port-stream":2822,loglevel:3356,pump:3535,"webextension-polyfill":3965},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.loadStateFromPersistence=ie,r.setupController=le,r.statePersistenceEvents=void 0,e("./lib/setup-initial-state-hooks");var n=L(e("events")),a=L(e("end-of-stream")),o=L(e("pump")),s=L(e("debounce-stream")),i=L(e("loglevel")),l=L(e("webextension-polyfill")),c=e("@metamask/obs-store"),u=e("@metamask/utils"),d=e("@metamask/controller-utils"),p=L(e("extension-port-stream")),f=e("eth-rpc-errors"),m=e("../../shared/constants/app"),E=e("../../shared/constants/metametrics"),g=e("../../shared/modules/browser-runtime.utils"),C=e("../../shared/modules/mv3.utils"),T=e("../../shared/modules/object.utils"),b=L(e("./migrations")),S=L(e("./lib/migrator")),O=L(e("./platforms/extension")),M=L(e("./lib/local-store")),N=(L(e("./lib/network-store")),e("./lib/setupSentry")),w=L(e("./lib/createStreamSink")),A=k(e("./lib/notification-manager")),h=k(e("./metamask-controller")),v=L(e("./first-time-state")),_=L(e("./lib/get-first-preferred-lang-code")),y=L(e("./lib/getObjStructure")),P=L(e("./lib/ens-ipfs/setup")),I=e("./lib/util");function R(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(R=function(e){return e?r:t})(e)}function k(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=R(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var s=a?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(n,o,s):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function L(e){return e&&e.__esModule?e:{default:e}}const U=new M.default;global.stateHooks.getMostRecentPersistedState=()=>U.mostRecentRetrievedState;const{sentry:x}=global,F={...v.default},j={[m.ENVIRONMENT_TYPE_POPUP]:!0,[m.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[m.ENVIRONMENT_TYPE_FULLSCREEN]:!0},D=["trezor-connect"];i.default.setLevel("info",!1);const B=new O.default,V=new A.default;let G=!1,Y=!1,q=!1;const K={},$={};let z,H;const J=new URL("https://metamask.github.io/phishing-warning/v3.0.0/"),Q=1e3,W=r.statePersistenceEvents=new n.default,{promise:X,resolve:Z,reject:ee}=(0,I.deferredPromise)(),te=async()=>{const e=await l.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,g.checkForLastErrorAndLog)(),e))).catch((()=>{(0,g.checkForLastErrorAndLog)()}));for(const t of e)l.default.tabs.sendMessage(t.id,{name:m.EXTENSION_MESSAGES.READY}).then((()=>{(0,g.checkForLastErrorAndLog)()})).catch((()=>{(0,g.checkForLastErrorAndLog)()}))};let re,ne;function ae(){const e=(new Date).toISOString();l.default.storage.session.set({timestamp:e})}async function oe(){try{const e=await ie(),t=e.data,r=await(0,_.default)();let n;if(C.isManifestV3){const e=2e3;ae(),setInterval(ae,e);const t=await l.default.storage.session.get(["isFirstMetaMaskControllerSetup"]);n=(null==t?void 0:t.isFirstMetaMaskControllerSetup)===undefined,await l.default.storage.session.set({isFirstMetaMaskControllerSetup:n})}le(t,r,{},n,e.meta),C.isManifestV3||await async function(){let e;try{const t=new URL("https://metamask.github.io/phishing-warning/v3.0.0/");let r,n;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const a=new Promise(((e,t)=>{r=e,n=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>n(new se)),Q),await a}catch(e){e instanceof se?console.warn("Phishing warning page timeout; page not guaranteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await te(),i.default.info("MetaMask initialization complete."),Z()}catch(e){ee(e)}}l.default.runtime.onConnect.addListener((async(...e)=>{await X,re(...e)})),l.default.runtime.onConnectExternal.addListener((async(...e)=>{await X,ne(...e)}));class se extends Error{constructor(){super("Timeout failed")}}async function ie(){const e=new S.default({migrations:b.default});if(e.on("error",console.warn),H=await U.get()||e.generateInitialState(F),H&&!H.data&&(H=e.generateInitialState(F),x.captureMessage("MetaMask - Empty vault found - unable to recover")),e.on("error",(e=>{const t=(0,y.default)(H);x.captureException(e,{extra:{vaultStructure:t}})})),H=await e.migrateData(H),!H)throw new Error("MetaMask - migrator returned undefined");if(!(0,u.isObject)(H.meta))throw new Error(`MetaMask - migrator metadata has invalid type '${typeof H.meta}'`);if("number"!=typeof H.meta.version)throw new Error(`MetaMask - migrator metadata version has invalid type '${typeof H.meta.version}'`);if(!(0,u.isObject)(H.data))throw new Error(`MetaMask - migrator data has invalid type '${typeof H.data}'`);return U.setMetadata(H.meta),U.set(H.data),H}function le(e,t,r,n,u){var g;z=new h.default({infuraProjectId:"b6bf7d3508c941499b10025c0776eaf8",showUserConfirmation:ce,initState:e,initLangCode:t,platform:B,notificationManager:V,browser:l.default,getRequestAccountTabIds:()=>$,getOpenMetamaskTabsIds:()=>K,localStore:U,overrides:r,isFirstMetaMaskControllerSetup:n,currentMigrationVersion:u.version,featureFlags:{}}),(0,P.default)({getCurrentChainId:()=>z.networkController.state.providerConfig.chainId,getIpfsGateway:z.preferencesController.getIpfsGateway.bind(z.preferencesController),getUseAddressBarEnsResolution:()=>z.preferencesController.store.getState().useAddressBarEnsResolution,provider:z.provider}),(0,o.default)((0,c.storeAsStream)(z.store),(0,s.default)(1e3),(0,w.default)((async e=>{await U.set(e),W.emit("state-persisted",e)})),(e=>{i.default.error("MetaMask - Persistence pipeline failed",e)})),g=z,global.stateHooks.getSentryAppState=function(){const e=g.memStore.getState();return(0,T.maskObject)(e,N.SENTRY_BACKGROUND_STATE)};const b=()=>G||Boolean(Object.keys(K).length)||Y,S=(e,t)=>{if(!1===e)z.onClientClosed();else{if(t===m.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(K).length))return;z.onEnvironmentTypeClosed(t)}};function O(){let e="";const t=M();t&&(e=String(t)),C.isManifestV3?(l.default.action.setBadgeText({text:e}),l.default.action.setBadgeBackgroundColor({color:"#037DD6"})):(l.default.browserAction.setBadgeText({text:e}),l.default.browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function M(){let e=z.appStateController.waitingForUnlock.length;return z.preferencesController.getUseRequestQueue()?e+=z.queuedRequestController.length():e+=z.approvalController.getTotalApprovalCount(),e}re=async e=>{var t;const n=e.name;if(D.includes(e.name))return;let o=!1;const s=(0,I.getPlatform)(),i=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(o=s===m.PLATFORM_FIREFOX?j[n]:(null==i?void 0:i.origin)===`chrome-extension://${l.default.runtime.id}`,o){var c;const t=(null==r||null===(c=r.getPortStream)||void 0===c?void 0:c.call(r,e))||new p.default(e);if(z.isClientOpen=!0,z.setupTrustedCommunication(t,e.sender),n===m.ENVIRONMENT_TYPE_POPUP&&(G=!0,(0,a.default)(t,(()=>{G=!1;const e=b();z.isClientOpen=e,S(e,m.ENVIRONMENT_TYPE_POPUP)}))),n===m.ENVIRONMENT_TYPE_NOTIFICATION&&(Y=!0,(0,a.default)(t,(()=>{Y=!1;const e=b();z.isClientOpen=e,S(e,m.ENVIRONMENT_TYPE_NOTIFICATION)}))),n===m.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;K[r]=!0,(0,a.default)(t,(()=>{delete K[r];const e=b();z.isClientOpen=e,S(e,m.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(i&&i.origin===J.origin&&i.pathname===J.pathname){var u;const t=(null==r||null===(u=r.getPortStream)||void 0===u?void 0:u.call(r,e))||new p.default(e);z.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;e.onMessage.addListener((e=>{e.data&&"eth_requestAccounts"===e.data.method&&($[n]=t)}))}ne(e)}},ne=e=>{var t;const n=(null==r||null===(t=r.getPortStream)||void 0===t?void 0:t.call(r,e))||new p.default(e);z.setupUntrustedCommunication({connectionStream:n,sender:e.sender})},null!=r&&r.registerConnectListeners&&r.registerConnectListeners(re,ne),O(),z.txController.on(h.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,O),z.decryptMessageController.hub.on(h.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,O),z.encryptionPublicKeyController.hub.on(h.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,O),z.signatureController.hub.on(h.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,O),z.appStateController.on(h.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,O),z.controllerMessenger.subscribe(h.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,O),z.txController.initApprovals(),z.controllerMessenger.subscribe("QueuedRequestController:countChanged",(e=>{O(),e>0&&ce()})),V.on(A.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{z.preferencesController.getUseRequestQueue()||(e?M()>0&&ce():(Object.keys(z.txController.txStateManager.getUnapprovedTxList()).forEach((e=>z.txController.txStateManager.setTxStatusRejected(e))),z.signatureController.rejectUnapproved(E.REJECT_NOTIFICATION_CLOSE_SIG),z.decryptMessageController.rejectUnapproved(E.REJECT_NOTIFICATION_CLOSE),z.encryptionPublicKeyController.rejectUnapproved(E.REJECT_NOTIFICATION_CLOSE),Object.values(z.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{switch(t){case d.ApprovalType.SnapDialogAlert:case d.ApprovalType.SnapDialogPrompt:z.approvalController.accept(e,null);break;case d.ApprovalType.SnapDialogConfirmation:case m.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountCreation:case m.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountRemoval:case m.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showSnapAccountRedirect:z.approvalController.accept(e,!1);break;default:z.approvalController.reject(e,f.ethErrors.provider.userRejectedRequest())}}))),O())})),Object.keys(z.snapController.state.snaps).length>0&&z.snapController.updateBlockedSnaps()}async function ce(){const e=await B.getActiveTabs(),t=Boolean(e.find((e=>K[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!q&&(r||!G)&&!t){q=!0;try{const e=z.appStateController.getCurrentPopupId();await V.showPopup((e=>z.appStateController.setCurrentPopupId(e)),e)}finally{q=!1}}}const ue=()=>{if(z)return z.metaMetricsController.updateTraits({[E.MetaMetricsUserTrait.InstallDateExt]:(new Date).toISOString().split("T")[0]}),void z.metaMetricsController.addEventBeforeMetricsOptIn({category:E.MetaMetricsEventCategory.App,event:E.MetaMetricsEventName.AppInstalled,properties:{}});setTimeout((()=>{ue()}),1e3)};(async function(){await async function(){Boolean(await U.get())||(ue(),B.openExtensionInBrowser())}(),oe().catch(i.default.error)})()}}},{package:"$root$",file:"app/scripts/background.js"}]],[4],{});